{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","gasPrice","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledLink","a","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","alt","src","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","target","href","length","substring","Number","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","eth","getGasPrice","SmartContractObj","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","transform","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.908e7815.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n        gasPrice: action.payload.gasPrice,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const gasPrice = await web3.eth.getGasPrice()\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n              gasPrice: gasPrice,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(blockchain.account, '0', mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n        gasPrice: blockchain.gasPrice * mintAmount \n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 10) {\n      newMintAmount = 10;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n        <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"4px dashed var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL}.\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg\n              alt={\"example\"}\n              src={\"/config/images/example.gif\"}\n              style={{ transform: \"scaleX(-1)\" }}\n            />\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            Please make sure you are connected to the right network (\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\n            Once you make the purchase, you cannot undo this action.\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n            successfully mint your NFT. We recommend that you don't lower the\n            gas limit.\n          </s.TextDescription>\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}